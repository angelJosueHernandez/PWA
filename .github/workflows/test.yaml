name: PWA CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Activación manual opcional

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Código
        uses: actions/checkout@v4.2.1

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Node.js 16 recomendado para Vite y React

      - name: Instalar Dependencias
        run: npm install  # Instala las dependencias incluyendo Vite

      - name: Configurar Caché
        uses: actions/cache@v3  # Cachear dependencias de npm para mejorar velocidad
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

 

  build:
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
      - name: Checkout Código
        uses: actions/checkout@v4.2.1

      - name: Instalar Dependencias
        run: npm install  # Asegura que las dependencias estén instaladas antes de compilar

      - name: Compilar Proyecto con Vite
        run: npm run build  # Ejecuta la construcción de Vite

      - name: Verificar Archivos de Construcción
        run: ls -la ./dist  # Asegúrate de que se generen los archivos de salida correctamente

      - name: Subir Artefacto
        uses: actions/upload-artifact@v3  # Sube los artefactos de compilación
        with:
          name: build-artifact
          path: ./dist  # Asegúrate de que este es el directorio de salida de Vite

  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    if: github.ref == 'refs/heads/main'  # Solo se despliega en la rama main

    steps:
      - name: Checkout Código
        uses: actions/checkout@v4.2.1

      - name: Desplegar a Vercel
        run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }}  # Asegúrate de que el token esté configurado en GitHub Secrets

  notify:
    runs-on: ubuntu-latest
    needs: [deploy]

    steps:
      - name: Notificar Despliegue Exitoso
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author
          payload: |
            {
              "text": "El despliegue en la rama main ha sido exitoso.",
              "channel": "#ci-notifications"
            }
